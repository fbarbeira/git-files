#!/bin/bash
#  Pre-commit git hook que comprueba el codigo puppet y erb antes
# de ser introducido en el repositorio.

# Revisa que sólo se realicen commits en la rama 'develop'.
if [ `git rev-parse --abbrev-ref HEAD` != "develop" ]; then
  echo "$(tput setaf 1 ; tput bold ; tput smul)Error$(tput sgr0):no estas en la rama 'develop'."
  exit 1
fi

# Check sintaxis de ficheros puppet.
echo "$(tput setaf 4 ; tput bold)==> $(tput setaf 7 ; tput bold)Revision de sintaxis de manifests.$(tput sgr0)"
for file in `git diff --name-only --cached | grep -E '\.(pp)'`
do
  if [[ -f $file ]]
  then
    num_files_p+=1
    puppet parser validate $file
    if [[ $? -ne 0 ]]
    then
      syntax_is_bad=1
    else
      echo "$file - OK"
    fi
  fi
done
if [[ num_files_p -eq 0 ]]
then
    echo "No manifests."
fi
echo ""

# Check de estilo puppet.
echo "$(tput setaf 4 ; tput bold)==> $(tput setaf 7 ; tput bold)Revision de estilo de manifests.$(tput sgr0)"
for file in `git diff --name-only --cached | grep -E '\.(pp)'`
do
  if [[ -f $file ]]
  then
    num_files_s+=1
    puppet-lint --fail-on-warnings --no-80chars-check $file
    if [[ $? -ne 0 ]]
    then
      syntax_is_bad=1
    else
      echo "$file - OK"
    fi
  fi
done
if [[ num_files_s -eq 0 ]]
then
    echo "No manifests."
fi
echo ""

# Check sintaxis de templates.
echo "$(tput setaf 4 ; tput bold)==> $(tput setaf 7 ; tput bold)Revision de sintaxis de templates.$(tput sgr0)"
for file in `git diff --name-only --cached | grep -E '\.erb'`
do
  if [[ -f $file ]]
  then
    num_files_t+=1
    erb -x -P -T - | ruby -c
    if [[ $? -ne 0 ]]
    then
      syntax_is_bad=1
    else
      echo "$file"
    fi
  fi
done
if [[ num_files_t -eq 0 ]]
then
  echo "No templates."
fi
echo ""



if [[ $syntax_is_bad -eq 1 ]]
then
  echo "---------------------------------------------------------"
  echo "$(tput setaf 1 ; tput bold)WARNING$(tput sgr0): Revisa tu codigo de nuevo."
  echo "Corrige los errores que se muestran arriba."
  echo "Mientras no sea valido no podras añadirlo al repositorio."
  echo "---------------------------------------------------------"
  exit 1
else
  echo "----------------------------"
  echo "$(tput setaf 2 ; tput bold)Codigo valido.$(tput sgr0)"
  echo "----------------------------"
fi
